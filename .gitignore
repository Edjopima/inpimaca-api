### Linux ###
* ~

# archivos temporales que se pueden crear si un proceso todavía tiene un identificador abierto de un archivo eliminado
.fuse_hidden *

# Preferencias del directorio de KDE
.directorio

# Carpeta de basura de Linux que puede aparecer en cualquier partición o disco
.Basura-*

# Los archivos .nfs se crean cuando se elimina un archivo abierto pero aún se está accediendo
.nfs *

### Nodo ###
# Registros
registros
*.Iniciar sesión
npm-debug.log *
yarn-debug.log *
yarn-error.log *
lerna-debug.log *

# Informes de diagnóstico (https://nodejs.org/api/report.html)
informe. [0-9] *. [0-9] *. [0-9] *. [0-9] *. json

# Datos en tiempo de ejecución
pids
* .pid
*.semilla
* .pid.lock

# Directorio para librerías instrumentadas generadas por jscoverage / JSCover
lib-cov

# Directorio de cobertura utilizado por herramientas como estambul
cobertura
* .lcov

# cobertura de prueba de Nueva York
.nyc_output

# Almacenamiento intermedio de Grunt (https://gruntjs.com/creating-plugins#storing-task-files)
.gruñido

# Directorio de dependencias de Bower (https://bower.io/)
bower_components

# configuración de node-waf
.lock-wscript

# Complementos binarios compilados (https://nodejs.org/api/addons.html)
construir / liberar

# Directorios de dependencias
node_modules /
jspm_packages /

# Archivos de declaración de TypeScript v1
tipificaciones /

# Caché de TypeScript
* .tsbuildinfo

# Directorio de caché npm opcional
.npm

# Caché eslint opcional
.eslintcache

# Caché de micropaquetes
.rpt2_caché /
.rts2_cache_cjs /
.rts2_cache_es /
.rts2_cache_umd /

# Historial de REPL opcional
.node_repl_history

# Salida de 'paquete npm'
* .tgz

# Archivo de integridad del hilo
.yarn-integridad

# archivo de variables de entorno dotenv
.env
.env.test

# caché de paquete de paquetes (https://parceljs.org/)
.cache

# Salida de compilación de Next.js
.siguiente

# Nuxt.js compila / genera salida
.nuxt
dist

# Archivos Gatsby
.cache/
# Comente en la línea pública si su proyecto usa Gatsby y no Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# público

# salida de compilación de vuepress
.vuepress / dist

# Directorios sin servidor
.servidor /

# Caché de FuseBox
.caja de fusibles/

# Archivos locales de DynamoDB
.dynamodb /

# Archivo de puerto TernJS
.puerto de popa

# Almacena las versiones de VSCode utilizadas para probar las extensiones de VSCode
.vscode-prueba

### VisualStudioCode ###
.vscode / *
! .vscode / settings.json
! .vscode / tasks.json
! .vscode / launch.json
! .vscode / extensions.json
* .code-espacio de trabajo

### Parche VisualStudioCode ###
# Ignorar todo el historial local de archivos
.historia

### hilo ###
# https://yarnpkg.com/advanced/qa#which-files-should-be-gitignored

# .yarn / unplugged y .yarn / build-state.yml probablemente siempre deberían ignorarse ya que
# por lo general contienen artefactos de construcción específicos de la máquina. Sin embargo, ignorarlos podría
# evitar que Zero-Installs funcione (para evitar esto, establezca enableScripts en falso).
.yarn / desenchufado
.yarn / build-state.yml

# .yarn / cache y .pnp. * pueden ignorarse de forma segura, pero deberá ejecutar yarn install
# para regenerarlos entre cada interruptor de rama.
# Descomente las siguientes líneas si no está utilizando Zero-Installs:
# .yarn / cache
# .pnp. *

# Fin de https://www.toptal.com/developers/gitignore/api/linux,node,visualstudiocode,yarn
